using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace AirlineTicketsBooking
{
    public partial class KorisnikLetovi : Window
    {
        public KorisnikLetovi()
        {
            InitializeComponent();
        }
        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
            try
            {
                BazaDataContext bdc = new BazaDataContext();
                var query =
                from Let in bdc.Lets
                join avio in bdc.AvioKompanijas
                on Let.AKID equals avio.ID
                select new { Let.ID, avio.NazivAvioKompanije, Let.SedistaPolazak, Let.PolazakDrzava, Let.PolazakGrad, Let.DestinacijaDrzava, Let.DestinacijaGrad, Let.PolazakDatum, Let.Polazak, Let.DolazakDatum, Let.Dolazak, Let.PovratakPolazakVreme, Let.PovratakPolazakDatum, Let.PovratakDolazakVreme, Let.PovratakDolazakDatum, Let.CenaEkonomska, Let.CenaBiznis, Let.CenaPrva };


                dataGrid_flights.ItemsSource = query.ToList();
                dataGrid_flights.Items.Refresh();
                if (dataGrid_flights.Items.IsEmpty)
                {
                    dataGrid_flights.Visibility = Visibility.Hidden;
                    label_nemalet.Visibility = Visibility.Visible;
                }


                //za rezervaciju
                var upit =
                from Let in bdc.Lets
                select Let.ID;

                foreach (var item in upit)
                {
                    idleta_cb.Items.Add(item);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Došlo je do greške! " + ex,
                        "Obaveštenje", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void close_btn_Click(object sender, RoutedEventArgs e)
        {
            Application.Current.Properties.Remove("ID");
            this.Hide();
            Login log = new Login();
            log.ShowDialog();
            dataGrid_flights.ItemsSource = null;
        }

        private void minimize_btn_Click(object sender, RoutedEventArgs e)
        {
            this.WindowState = WindowState.Minimized;
        }

        private void home_btn_Click(object sender, RoutedEventArgs e)
        {
            this.Hide();
            KorisnikPocetna kp = new KorisnikPocetna();
            kp.ShowDialog();
        }

        private void rezervacije_btn_Click(object sender, RoutedEventArgs e)
        {
            this.Hide();
            KorisnikRezervacije kr = new KorisnikRezervacije();
            kr.ShowDialog();
        }
        private void letovi_btn_Click(object sender, RoutedEventArgs e)
        {
            this.Hide();
            KorisnikLetovi kl = new KorisnikLetovi();
            kl.ShowDialog();
        }
        private void logout_btn_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                Application.Current.Properties.Remove("ID");
                this.Hide();
                Login log = new Login();
                log.ShowDialog();
            }
            catch(Exception ex)
            {
                MessageBox.Show("Došlo je do greške! ",
                        "Obaveštenje", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void move(object sender, MouseButtonEventArgs e)
        {
            DragMove();
        }

        private void dataGrid_flights_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dataGrid_flights.Columns[0].Header = "ID leta"; dataGrid_flights.Columns[1].Header = "Prevoznik"; dataGrid_flights.Columns[2].Header = "Mesta"; dataGrid_flights.Columns[3].Header = "Polazak - drzava"; dataGrid_flights.Columns[4].Header = "Polazak - grad";
            dataGrid_flights.Columns[5].Header = "Destinacija - drzava"; dataGrid_flights.Columns[6].Header = "Destinacija - grad"; dataGrid_flights.Columns[7].Header = "Datum polaska"; dataGrid_flights.Columns[8].Header = "Vreme polaska"; dataGrid_flights.Columns[9].Header = "Datum dolaska"; dataGrid_flights.Columns[10].Header = "Vreme dolaska";
            dataGrid_flights.Columns[11].Header = "Povratak - polazak - datum";
            dataGrid_flights.Columns[12].Header = "Povratak - polazak - vreme"; dataGrid_flights.Columns[13].Header = "Povratak - dolazak - datum"; dataGrid_flights.Columns[14].Header = "Povratak - dolazak - vreme"; dataGrid_flights.Columns[15].Header = "Cena - ekonomska(EURA)"; dataGrid_flights.Columns[16].Header = "Cena - biznis(EURA)"; dataGrid_flights.Columns[17].Header = "Cena - prva(EURA)";
        }

        private void idleta_cb_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            try
            {
                BazaDataContext bdc = new BazaDataContext();
                var upit =
                from Let in bdc.Lets
                where Let.ID.Equals(Convert.ToInt32(idleta_cb.SelectedValue))
                select Let;

                var rez = upit.SingleOrDefault();
                if (rez == null)
                {
                    idleta_cb.SelectedIndex = -1;
                    povratna_rb.IsChecked = false;
                    jedanpravac_rb.IsChecked = false;
                    polaziste_tb.Text = "";
                    destinacija_tb.Text = "";
                    dpolaska_tb.Text = "";
                    dpovratka_tb.Text = "";
                    ukupnacena_tb.Text = "";

                }
                else
                {
                    polaziste_tb.Text = rez.PolazakGrad;
                    destinacija_tb.Text = rez.DestinacijaGrad;
                    dpolaska_tb.Text = rez.PolazakDatum.ToString();
                    dpovratka_tb.Text = rez.PovratakDolazakDatum.ToString();
                    int broj = int.Parse(sedista_cb.Text);

                    if (klasa_cb.Text == "Ekonomska" && povratna_rb.IsChecked == true)
                    {
                        ukupnacena_tb.Text = (rez.CenaEkonomska * broj).ToString();
                    }
                    else if (klasa_cb.Text == "Biznis" && povratna_rb.IsChecked == true)
                    {
                        ukupnacena_tb.Text = (rez.CenaBiznis * broj).ToString();
                    }
                    else if (klasa_cb.Text == "Prva" && povratna_rb.IsChecked == true)
                    {
                        ukupnacena_tb.Text = (rez.CenaPrva * broj).ToString();
                    }
                    else if (klasa_cb.Text == "Ekonomska" && jedanpravac_rb.IsChecked == true)
                    {
                        ukupnacena_tb.Text = ((rez.CenaEkonomska - 190) * broj).ToString();
                    }
                    else if (klasa_cb.Text == "Biznis" && jedanpravac_rb.IsChecked == true)
                    {
                        ukupnacena_tb.Text = ((rez.CenaBiznis - 190) * broj).ToString();
                    }
                    else if (klasa_cb.Text == "Prva" && jedanpravac_rb.IsChecked == true)
                    {
                        ukupnacena_tb.Text = ((rez.CenaPrva - 190) * broj).ToString();
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Došlo je do greške! " + ex,
                        "Obaveštenje", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void potvrdirez_btn_Click(object sender, RoutedEventArgs e)
        {
            if (idleta_cb.Text != String.Empty && sedista_cb.Text != String.Empty && klasa_cb.Text != String.Empty && polaziste_tb.Text != String.Empty && destinacija_tb.Text != String.Empty
                && dpolaska_tb.Text != String.Empty && dpovratka_tb.Text != String.Empty && ukupnacena_tb.Text != String.Empty)
            {

                try
                {
                    BazaDataContext bdc = new BazaDataContext();
                    int id = int.Parse(Application.Current.Properties["ID"].ToString()); // id korisnika
                    var upit =
                    from Let in bdc.Lets
                    where Let.ID.Equals(idleta_cb.SelectedValue)
                    select Let;

                    var upit1 =
                    from Korisnik in bdc.Korisniks
                    where Korisnik.ID == id
                    select Korisnik;

                    var res = upit.FirstOrDefault();
                    var res1 = upit1.FirstOrDefault();


                    var upit2 =
                    from AvioKompanija in bdc.AvioKompanijas
                    where AvioKompanija.ID == res.AKID
                    select AvioKompanija;


                    var res2 = upit2.FirstOrDefault();

                    var rezerv =
                    from Rezervacija in bdc.Rezervacijas
                    where Rezervacija.IDLeta == int.Parse(idleta_cb.Text) && Rezervacija.IDKorisnika == id
                    select Rezervacija;

                    var rezultat = rezerv.Any();

                    if (rezerv.Any())
                    {
                        MessageBox.Show("Vec imate rezervaciju za ovaj let!",
                              "INFO", MessageBoxButton.OK, MessageBoxImage.Warning);
                    }
                    else if (res.SedistaPolazak < int.Parse(sedista_cb.Text))
                    {
                        MessageBox.Show("Ovaj let nema toliko slobodnih mesta!",
                              "INFO", MessageBoxButton.OK, MessageBoxImage.Warning);
                    }
                    else if (povratna_rb.IsChecked == false && jedanpravac_rb.IsChecked == false)
                    {
                        MessageBox.Show("Prvo odaberite da li zelite povratnu ili kartu u jednom pravcu!",
                                    "INFO", MessageBoxButton.OK, MessageBoxImage.Warning);
                    }
                    else
                    {
                        Rezervacija rez = new Rezervacija();
                        rez.IDLeta = int.Parse(idleta_cb.Text);
                        rez.IDKorisnika = id;
                        rez.IPKorisnika = res1.ImePrezime;
                        rez.AKID = res2.ID;
                        rez.AKNaziv = res2.NazivAvioKompanije;
                        rez.LetBR = res.LetBR;
                        rez.Sedista = int.Parse(sedista_cb.Text);
                        rez.Klasa = klasa_cb.Text;
                        if (povratna_rb.IsChecked == true)
                        {
                            rez.Karta = "Povratna";
                            //smanjivanje broja sedista
                            res.SedistaPolazak = res.SedistaPolazak - int.Parse(sedista_cb.Text);
                            res.SedistaPovratak = res.SedistaPovratak - int.Parse(sedista_cb.Text);
                            bdc.SubmitChanges();
                        }
                        else
                        {
                            rez.Karta = "Jedan pravac";
                            res.SedistaPolazak = res.SedistaPolazak - int.Parse(sedista_cb.Text);
                            bdc.SubmitChanges();
                        }
                        rez.PolazakDrzava = res.PolazakDrzava;
                        rez.PolazakGrad = res.PolazakGrad;
                        rez.DestinacijaDrzava = res.DestinacijaDrzava;
                        rez.DestinacijaGrad = res.DestinacijaGrad;
                        rez.Polazak = res.Polazak;
                        rez.PolazakDatum = res.PolazakDatum;
                        rez.Dolazak = res.Dolazak;
                        rez.DolazakDatum = res.DolazakDatum;
                        rez.PovratakPolazakVreme = res.PovratakPolazakVreme;
                        rez.PovratakPolazakDatum = res.PovratakPolazakDatum;
                        rez.PovratakDolazakVreme = res.PovratakDolazakVreme;
                        rez.PovratakDolazakDatum = res.PovratakDolazakDatum;
                        rez.Cena = double.Parse(ukupnacena_tb.Text);

                        bdc.Rezervacijas.InsertOnSubmit(rez);
                        bdc.SubmitChanges();




                        MessageBox.Show("Uspesno ste rezervisali avio kartu!",
                                   "INFO", MessageBoxButton.OK, MessageBoxImage.Information);

                        this.Hide();
                        KorisnikRezervacije kr = new KorisnikRezervacije();
                        kr.ShowDialog();
                    }
                }
                catch (System.Data.SqlClient.SqlException ex)
                {
                    MessageBox.Show("Došlo je do greške! " + ex,
                            "Obaveštenje", MessageBoxButton.OK, MessageBoxImage.Warning);
                }
            }
            else
            {
                MessageBox.Show("Sva polja moraju biti popunjena!",
                           "INFO", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void povratna_rb_Checked(object sender, RoutedEventArgs e)
        {
            try
            {
                BazaDataContext bdc = new BazaDataContext();
                var upit =
                from Let in bdc.Lets
                where Let.ID.Equals(Convert.ToInt32(idleta_cb.SelectedValue))
                select Let;

                var rez = upit.FirstOrDefault();

                int broj = int.Parse(sedista_cb.Text);
                if (rez == null)
                {
                    idleta_cb.SelectedIndex = -1;
                    povratna_rb.IsChecked = false;
                    jedanpravac_rb.IsChecked = false;
                    polaziste_tb.Text = "";
                    destinacija_tb.Text = "";
                    dpolaska_tb.Text = "";
                    dpovratka_tb.Text = "";
                    ukupnacena_tb.Text = "";

                }
                else
                {

                    if (sedista_cb.Text != String.Empty && klasa_cb.Text != String.Empty && idleta_cb.Text != String.Empty)
                    {
                        if (klasa_cb.Text == "Ekonomska" && povratna_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = (rez.CenaEkonomska * broj).ToString();
                        }
                        else if (klasa_cb.Text == "Biznis" && povratna_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = (rez.CenaBiznis * broj).ToString();
                        }
                        else if (klasa_cb.Text == "Prva" && povratna_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = (rez.CenaPrva * broj).ToString();
                        }
                        else if (klasa_cb.Text == "Ekonomska" && jedanpravac_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = ((rez.CenaEkonomska - 190) * broj).ToString();
                        }
                        else if (klasa_cb.Text == "Biznis" && jedanpravac_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = ((rez.CenaBiznis - 190) * broj).ToString();
                        }
                        else if (klasa_cb.Text == "Prva" && jedanpravac_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = ((rez.CenaPrva - 190) * broj).ToString();
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Došlo je do greške! " + ex,
                        "Obaveštenje", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void jedanpravac_rb_Checked(object sender, RoutedEventArgs e)
        {
            try
            {
                BazaDataContext bdc = new BazaDataContext();
                var upit =
                from Let in bdc.Lets
                where Let.ID.Equals(Convert.ToInt32(idleta_cb.SelectedValue))
                select Let;

                var rez = upit.FirstOrDefault();

                int broj = int.Parse(sedista_cb.Text);

                if (rez == null)
                {
                    idleta_cb.SelectedIndex = -1;
                    povratna_rb.IsChecked = false;
                    jedanpravac_rb.IsChecked = false;
                    polaziste_tb.Text = "";
                    destinacija_tb.Text = "";
                    dpolaska_tb.Text = "";
                    dpovratka_tb.Text = "";
                    ukupnacena_tb.Text = "";

                }
                else
                {
                    if (sedista_cb.Text != String.Empty && klasa_cb.Text != String.Empty && idleta_cb.Text != String.Empty)
                    {
                        if (klasa_cb.Text == "Ekonomska" && povratna_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = (rez.CenaEkonomska * broj).ToString();
                        }
                        else if (klasa_cb.Text == "Biznis" && povratna_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = (rez.CenaBiznis * broj).ToString();
                        }
                        else if (klasa_cb.Text == "Prva" && povratna_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = (rez.CenaPrva * broj).ToString();
                        }
                        else if (klasa_cb.Text == "Ekonomska" && jedanpravac_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = ((rez.CenaEkonomska - 190) * broj).ToString();
                        }
                        else if (klasa_cb.Text == "Biznis" && jedanpravac_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = ((rez.CenaBiznis - 190) * broj).ToString();
                        }
                        else if (klasa_cb.Text == "Prva" && jedanpravac_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = ((rez.CenaPrva - 190) * broj).ToString();
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Došlo je do greške! " + ex,
                        "Obaveštenje", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void klasa_cb_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            try
            {
                BazaDataContext bdc = new BazaDataContext();
                var upit =
                from Let in bdc.Lets
                where Let.ID.Equals(Convert.ToInt32(idleta_cb.SelectedValue))
                select Let;

                var rez = upit.FirstOrDefault();

                int broj = int.Parse(sedista_cb.Text);
                if (rez == null)
                {
                    idleta_cb.SelectedIndex = -1;
                    povratna_rb.IsChecked = false;
                    jedanpravac_rb.IsChecked = false;
                    polaziste_tb.Text = "";
                    destinacija_tb.Text = "";
                    dpolaska_tb.Text = "";
                    dpovratka_tb.Text = "";
                    ukupnacena_tb.Text = "";

                }
                else
                {
                    if (sedista_cb.Text != String.Empty && klasa_cb.Text != String.Empty && idleta_cb.Text != String.Empty)
                    {
                        if (Ekonomska.IsSelected && povratna_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = (rez.CenaEkonomska * broj).ToString();
                        }
                        else if (Biznis.IsSelected && povratna_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = (rez.CenaBiznis * broj).ToString();
                        }
                        else if (Prva.IsSelected && povratna_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = (rez.CenaPrva * broj).ToString();
                        }
                        else if (Ekonomska.IsSelected && jedanpravac_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = ((rez.CenaEkonomska - 190) * broj).ToString();
                        }
                        else if (Biznis.IsSelected && jedanpravac_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = ((rez.CenaBiznis - 190) * broj).ToString();
                        }
                        else if (Prva.IsSelected && jedanpravac_rb.IsChecked == true)
                        {
                            ukupnacena_tb.Text = ((rez.CenaPrva - 190) * broj).ToString();
                        }
                    }
                }
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                MessageBox.Show("Došlo je do greške! " + ex,
                        "Obaveštenje", MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void sedista_cb_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            if (sedista_cb.Text != String.Empty && klasa_cb.Text != String.Empty && idleta_cb.Text != String.Empty)
            {
                try
                {
                    BazaDataContext bdc = new BazaDataContext();
                    var upit =
                    from Let in bdc.Lets
                    where Let.ID.Equals(Convert.ToInt32(idleta_cb.SelectedValue))
                    select Let;

                    var rez = upit.FirstOrDefault();

                    int broj = int.Parse(sedista_cb.Text);
                    if (rez == null)
                    {
                        idleta_cb.SelectedIndex = -1;
                        povratna_rb.IsChecked = false;
                        jedanpravac_rb.IsChecked = false;
                        polaziste_tb.Text = "";
                        destinacija_tb.Text = "";
                        dpolaska_tb.Text = "";
                        dpovratka_tb.Text = "";
                        ukupnacena_tb.Text = "";

                    }
                    else
                    {
                        if (sed1.IsSelected)
                        {
                            if (Ekonomska.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaEkonomska * 1).ToString();
                            }
                            else if (Biznis.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaBiznis * 1).ToString();
                            }
                            else if (Prva.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaPrva * 1).ToString();
                            }
                            else if (Ekonomska.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaEkonomska - 190) * 1).ToString();
                            }
                            else if (Biznis.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaBiznis - 190) * 1).ToString();
                            }
                            else if (Prva.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaPrva - 190) * 1).ToString();
                            }
                        }
                        else if (sed2.IsSelected)
                        {

                            if (Ekonomska.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaEkonomska * 2).ToString();
                            }
                            else if (Biznis.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaBiznis * 2).ToString();
                            }
                            else if (Prva.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaPrva * 2).ToString();
                            }
                            else if (Ekonomska.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaEkonomska - 190) * 2).ToString();
                            }
                            else if (Biznis.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaBiznis - 190) * 2).ToString();
                            }
                            else if (Prva.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaPrva - 190) * 2).ToString();
                            }
                        }
                        else if (sed3.IsSelected)
                        {

                            if (Ekonomska.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaEkonomska * 3).ToString();
                            }
                            else if (Biznis.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaBiznis * 3).ToString();
                            }
                            else if (Prva.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaPrva * 3).ToString();
                            }
                            else if (Ekonomska.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaEkonomska - 190) * 3).ToString();
                            }
                            else if (Biznis.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaBiznis - 190) * 3).ToString();
                            }
                            else if (Prva.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaPrva - 190) * 3).ToString();
                            }
                        }
                        else if (sed4.IsSelected)
                        {

                            if (Ekonomska.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaEkonomska * 4).ToString();
                            }
                            else if (Biznis.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaBiznis * 4).ToString();
                            }
                            else if (Prva.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaPrva * 4).ToString();
                            }
                            else if (Ekonomska.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaEkonomska - 190) * 4).ToString();
                            }
                            else if (Biznis.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaBiznis - 190) * 4).ToString();
                            }
                            else if (Prva.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaPrva - 190) * 4).ToString();
                            }
                        }
                        else if (sed5.IsSelected)
                        {

                            if (Ekonomska.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaEkonomska * 5).ToString();
                            }
                            else if (Biznis.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaBiznis * 5).ToString();
                            }
                            else if (Prva.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaPrva * 5).ToString();
                            }
                            else if (Ekonomska.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaEkonomska - 190) * 5).ToString();
                            }
                            else if (Biznis.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaBiznis - 190) * 5).ToString();
                            }
                            else if (Prva.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaPrva - 190) * 5).ToString();
                            }
                        }
                        else if (sed6.IsSelected)
                        {

                            if (Ekonomska.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaEkonomska * 6).ToString();
                            }
                            else if (Biznis.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaBiznis * 6).ToString();
                            }
                            else if (Prva.IsSelected && povratna_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = (rez.CenaPrva * 6).ToString();
                            }
                            else if (Ekonomska.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaEkonomska - 190) * 6).ToString();
                            }
                            else if (Biznis.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaBiznis - 190) * 6).ToString();
                            }
                            else if (Prva.IsSelected && jedanpravac_rb.IsChecked == true)
                            {
                                ukupnacena_tb.Text = ((rez.CenaPrva - 190) * 6).ToString();
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Došlo je do greške! " + ex,
                            "Obaveštenje", MessageBoxButton.OK, MessageBoxImage.Warning);
                }
            }
        }
    }
}